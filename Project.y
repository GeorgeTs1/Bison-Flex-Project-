%{
#include <stdio.h>
#include<stdlib.h>
#include<string.h>

int yylex();
int yyerror(char *s);
extern int linenum;
static int count_varschar=0;
static int count_varsint=0;
void check_var_names(char* str1,char* str2);
char* c_vars;
char* i_vars;
%}

%token PROGRAM STRING NEW_LINE FUNCTION F_PARAMETERS F_DECLARATIONS
%token END_FUNCTION STARTMAIN ASSIGNMENT WHILE_COMMAND
%token END_WHILE FOR_COMMAND END_FOR IF_COMMAND ELSE_IF ELSE
%token END_IF SWITCH_COMMAND CASE_COMMAND DEFAULT ENDSWITCH
%token PRINT_COMMAND BREAK_COMMAND ENDMAIN OTHER RETURN_VAR
%token TAB SPACE VARS_CHAR VARS_INTEGER SEMICOLON STRING2
%token STRUCT ENDSTRUCT TYPE_STRUCT END_T_STRUCT
%token PLUS MINUS MUL DIV POWER EQUAL L_PAR R_PAR 
%token RETURN 

%type <prog_name>    STRING
%type <variables>    STRING2
%type <variables>    F_PARAMETERS
%type <prog_name>    F_DECLARATIONS
%type <variables>    ASSIGNMENT
%type <commands>     WHILE_COMMAND
%type <commands>     FOR_COMMAND
%type <commands>     IF_COMMAND
%type <commands>     ELSE_IF
%type <commands>     SWITCH_COMMAND
%type <commands>     CASE_COMMAND 
%type <commands>     PRINT_COMMAND		

%union{
    
    char function_name[200];
    char prog_name[200];
    char variables[200];
    char assignment[150];
    int number;
    char commands[150];
	
}

%%



prog:
  main
;


main:

    program
	{
		printf("\nProgram is right!");
	}
;


program:
	
	
	|       {
			printf("\nYou didin't type anything :("); 
		}	
	| function
		
		{
			printf("\nProgram should start with PROGRAM prog_name");
		}
	
	|for NEW_LINE   
                {
			printf("\nI LOVE FOR");
		}

	|while NEW_LINE
		{
			printf("\nI LOVE WHILE ALSO");
		}
	|switch
	

	|print 
		{	
			printf("\nPrint is ok also");
		}

	|struct {
			printf("\nStruct works perfectly");
		}			
		
	|STRING

		{
			printf("\nJust testing strings");
		}

	|assignments

		{
			printf("\nWorking on assignments");

		}
	
	| OTHER	
		{
			printf("\nGTPK input");
		}

	|declarations_char  NEW_LINE declarations_int 
		{
			check_var_names(c_vars,i_vars);
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ENDMAIN
		{
			printf("\nRight assignment program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ENDMAIN
	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ENDMAIN
	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ENDMAIN 
	 
	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT TAB  for NEW_LINE ENDMAIN
		{
			printf("\nRight for program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE ENDMAIN

	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE ENDMAIN
		{
			printf("\nRight while program");
		}

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE ENDMAIN


	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB  print NEW_LINE ENDMAIN
		{
			printf("\nRight print program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE TAB print NEW_LINE ENDMAIN
	 
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE ENDMAIN
	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE ENDMAIN

       	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE ENDMAIN

	


	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE ENDMAIN
		{
			printf("\nRight if program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE TAB if  NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE ENDMAIN

	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE ENDMAIN
		{
			printf("\nRight switch program");
		} 
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch  NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE TAB switch  NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch  NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch  NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE TAB switch  NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch  NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch  NEW_LINE ENDMAIN

						
	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE TAB  while NEW_LINE ENDMAIN
		{
			printf("\nRight for while program");
		} 

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE TAB while NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE TAB while NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE TAB while NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE TAB while NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE TAB while NEW_LINE ENDMAIN

		
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE  TAB if NEW_LINE ENDMAIN
		{
			printf("\nRight for if program");
		} 
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN
	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE TAB if  NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

	

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE print NEW_LINE ENDMAIN
		{
			printf("\nRight for print  program");
		} 
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN
	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN 

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE TAB  switch NEW_LINE ENDMAIN
		{
			printf("\nRight for switch program");
		} 		

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN 
 
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN    

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE TAB  for NEW_LINE ENDMAIN
		{
			printf("\nRight for for program");
		}

  	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE for NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE for NEW_LINE ENDMAIN
	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN
  


	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB  while NEW_LINE NEW_LINE TAB  while NEW_LINE ENDMAIN
		{
			printf("\nRight while while program");
		} 
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE NEW_LINE TAB while NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE NEW_LINE TAB while NEW_LINE ENDMAIN
	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE NEW_LINE TAB while NEW_LINE ENDMAIN
	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE NEW_LINE TAB while NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE NEW_LINE TAB while NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB  while NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN
		{
			printf("\nRight while for program");
		} 

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN 

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB  while NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN
	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB  while NEW_LINE NEW_LINE if NEW_LINE ENDMAIN
		{
			printf("\nRight while if program");
		} 
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN
	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN 

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN
		{
			printf("\nRight while print program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN
	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN
	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE 	ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE NEW_LINE print NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE TAB  while NEW_LINE NEW_LINE TAB  switch NEW_LINE ENDMAIN
		{
			printf("\nRight while switch program");
		} 

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN
		
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE NEW_LINE switch NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE NEW_LINE switch NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE NEW_LINE switch NEW_LINE ENDMAIN
	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN
 

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB  if NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN
		{
			printf("\nRight if if program");
		} 
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN
	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN


	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB  if NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN
		{
			printf("\nRight if for program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN

 
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB  if NEW_LINE NEW_LINE TAB while NEW_LINE ENDMAIN
		{
			printf("\nRight if while program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB while NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB while NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB while NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB while NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB while NEW_LINE ENDMAIN

	
		
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB  if NEW_LINE NEW_LINE TAB  print NEW_LINE ENDMAIN
		{
			printf("\nRight if print program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN
	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN

	 

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB  if NEW_LINE NEW_LINE TAB  switch NEW_LINE ENDMAIN
		{
			printf("\nRight if switch program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN
	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE switch NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN
	
	
 
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE  TAB print NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN
		{
			printf("\nRight print print program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN
	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN
	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE 	ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE  NEW_LINE TAB print NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN	

	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB  print NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN
		{
			printf("\nRight print for program");
		}	

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN


	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE TAB  print NEW_LINE NEW_LINE TAB  while NEW_LINE ENDMAIN
		{
			printf("\nRight print while program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB while NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB while NEW_LINE ENDMAIN 

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB while NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB while NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB while NEW_LINE ENDMAIN
		
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB  print NEW_LINE NEW_LINE TAB  if NEW_LINE ENDMAIN
		{
			printf("\nRight print if program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN
 

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB  print NEW_LINE NEW_LINE TAB  switch NEW_LINE ENDMAIN
		{
			printf("\nRight print switch program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN
	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN
	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN


	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB  switch NEW_LINE NEW_LINE TAB  switch NEW_LINE ENDMAIN
		{
			printf("\nRight switch switch program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB switch NEW_LINE ENDMAIN

	 
	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB  switch NEW_LINE NEW_LINE TAB  for NEW_LINE ENDMAIN
		{
			printf("\nRight switch for program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN
	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB for NEW_LINE ENDMAIN

	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB  switch NEW_LINE NEW_LINE TAB  while NEW_LINE ENDMAIN
		{
			printf("\nRight switch while program");	
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB while NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB while NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB while NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB while NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB while NEW_LINE ENDMAIN

	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB  switch NEW_LINE NEW_LINE TAB  if NEW_LINE ENDMAIN
		{
			printf("\nRight switch if program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB if NEW_LINE ENDMAIN


	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB  switch NEW_LINE NEW_LINE TAB  print NEW_LINE ENDMAIN
		{
			printf("\nRight switch print program");
		}			
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN

        | PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE NEW_LINE TAB print NEW_LINE ENDMAIN
	


		
	| PROGRAM STRING NEW_LINE NEW_LINE TAB function NEW_LINE NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT  NEW_LINE ENDMAIN
		{
			printf("\nRight function program");
		}	
	| PROGRAM STRING NEW_LINE NEW_LINE TAB function NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE NEW_LINE TAB function NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE NEW_LINE TAB function NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE NEW_LINE TAB function NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ENDMAIN
	
	| PROGRAM STRING NEW_LINE NEW_LINE TAB function NEW_LINE STARTMAIN NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE NEW_LINE TAB function NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE NEW_LINE TAB function NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ENDMAIN

	| PROGRAM STRING NEW_LINE NEW_LINE TAB function NEW_LINE STARTMAIN NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ENDMAIN   


	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE struct NEW_LINE ENDMAIN
		{
			printf("\nRight struct program");
		}		
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE struct NEW_LINE ENDMAIN
		{
			printf("\nRight function struct program");
		}			
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE struct NEW_LINE function NEW_LINE ENDMAIN
		{
			printf("\nRight struct function program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE function NEW_LINE ENDMAIN
		{
			printf("\nRight function function program");
		}				
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE struct NEW_LINE struct NEW_LINE ENDMAIN
		{
			printf("\nRight struct struct program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE function NEW_LINE struct NEW_LINE ENDMAIN
		{
			printf("\nRight function function struct program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE struct NEW_LINE struct NEW_LINE ENDMAIN
		{
			printf("\nRight function struct struct program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE function NEW_LINE struct NEW_LINE struct NEW_LINE ENDMAIN
		{
			printf("\nRight function function struct struct program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE struct NEW_LINE for NEW_LINE while NEW_LINE ENDMAIN
		{
			printf("\nRight function struct for while program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE function NEW_LINE for NEW_LINE while NEW_LINE ENDMAIN
		{
			printf("\nRight function function for while program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE struct NEW_LINE struct NEW_LINE for NEW_LINE while NEW_LINE ENDMAIN
		{
			printf("\nRight struct struct for while program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE struct NEW_LINE for NEW_LINE print NEW_LINE ENDMAIN
		{
			printf("\nRight function struct for print program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE function NEW_LINE for NEW_LINE print NEW_LINE ENDMAIN
		{
			printf("\nRight function function for print program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE struct NEW_LINE struct NEW_LINE for NEW_LINE print NEW_LINE ENDMAIN
		{
			printf("\nRight struct struct for print program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE struct NEW_LINE while NEW_LINE print NEW_LINE ENDMAIN
		{
			printf("\nRight function struct while print program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE function NEW_LINE while NEW_LINE print NEW_LINE ENDMAIN
		{
			printf("\nRight function function while print program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE struct NEW_LINE struct NEW_LINE while NEW_LINE print NEW_LINE ENDMAIN
		{
			printf("\nRight struct struct while print program");
		}		

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE struct NEW_LINE for NEW_LINE print NEW_LINE ENDMAIN
		{
			printf("\nRight function struct for print program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE function NEW_LINE for NEW_LINE print NEW_LINE ENDMAIN
		{
			printf("\nRight function function for print program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE struct NEW_LINE struct NEW_LINE for NEW_LINE print NEW_LINE ENDMAIN
		{
			printf("\nRight struct struct for print program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE struct NEW_LINE for NEW_LINE if NEW_LINE ENDMAIN
		{
			printf("\nRight function struct for if program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE function NEW_LINE for NEW_LINE if NEW_LINE ENDMAIN
		{
			printf("\nRight function function for if program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE struct NEW_LINE struct NEW_LINE for NEW_LINE if NEW_LINE ENDMAIN
		{
			printf("\nRight struct struct for if program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE struct NEW_LINE while NEW_LINE print NEW_LINE ENDMAIN
		{
			printf("\nRight function struct while print program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE function NEW_LINE while NEW_LINE print NEW_LINE ENDMAIN
		{
			printf("\nRight function function while print program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE struct NEW_LINE struct NEW_LINE while NEW_LINE print NEW_LINE ENDMAIN
		{
			printf("\nRight struct struct while print program");
		}		
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE struct NEW_LINE print NEW_LINE print NEW_LINE ENDMAIN
		{
			printf("\nRight function struct print print program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE function NEW_LINE print NEW_LINE print NEW_LINE ENDMAIN
		{
			printf("\nRight function function print print program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE struct NEW_LINE struct NEW_LINE print NEW_LINE print NEW_LINE ENDMAIN
		{
			printf("\nRight struct struct print print program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE struct NEW_LINE for NEW_LINE switch NEW_LINE ENDMAIN
		{
			printf("\nRight function struct for switch program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE function NEW_LINE for NEW_LINE switch NEW_LINE ENDMAIN
		{
			printf("\nRight function function for switch program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE struct NEW_LINE struct NEW_LINE for NEW_LINE switch NEW_LINE ENDMAIN
		{
			printf("\nRight struct struct for switch program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE struct NEW_LINE while NEW_LINE switch NEW_LINE ENDMAIN
		{
			printf("\nRight function struct while switch program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE function NEW_LINE while NEW_LINE switch NEW_LINE ENDMAIN
		{
			printf("\nRight function function while switch program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE struct NEW_LINE struct NEW_LINE while NEW_LINE switch NEW_LINE ENDMAIN
		{
			printf("\nRight struct struct while switch program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE struct NEW_LINE if NEW_LINE switch NEW_LINE ENDMAIN
		{
			printf("\nRight function struct if switch program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE function NEW_LINE if NEW_LINE switch NEW_LINE ENDMAIN
		{
			printf("\nRight function function if switch program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE struct NEW_LINE struct NEW_LINE if NEW_LINE switch NEW_LINE ENDMAIN
		{
			printf("\nRight struct struct if switch program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE struct NEW_LINE print NEW_LINE switch NEW_LINE ENDMAIN
		{
			printf("\nRight function struct print switch program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE function NEW_LINE print NEW_LINE switch NEW_LINE ENDMAIN
		{
			printf("\nRight function function print switch program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE struct NEW_LINE struct NEW_LINE print NEW_LINE switch NEW_LINE ENDMAIN
		{
			printf("\nRight struct struct print switch program");
		}

	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE struct NEW_LINE for NEW_LINE  ENDMAIN
		{
			printf("\nRight function struct for  program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE function NEW_LINE for NEW_LINE ENDMAIN
		{
			printf("\nRight function function for  program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE struct NEW_LINE struct NEW_LINE for NEW_LINE ENDMAIN
		{
			printf("\nRight struct struct for  program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE struct NEW_LINE while NEW_LINE  ENDMAIN
		{
			printf("\nRight function struct while  program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE function NEW_LINE while NEW_LINE ENDMAIN
		{
			printf("\nRight function function while  program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE struct NEW_LINE struct NEW_LINE while NEW_LINE ENDMAIN
		{
			printf("\nRight struct struct while  program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE struct NEW_LINE if NEW_LINE  ENDMAIN
		{
			printf("\nRight function struct if  program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE function NEW_LINE if NEW_LINE ENDMAIN
		{
			printf("\nRight function function if  program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE struct NEW_LINE struct NEW_LINE if NEW_LINE ENDMAIN
		{
			printf("\nRight struct struct if  program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE struct NEW_LINE print NEW_LINE  ENDMAIN
		{
			printf("\nRight function struct print  program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE function NEW_LINE print NEW_LINE ENDMAIN
		{
			printf("\nRight function function print  program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE struct NEW_LINE struct NEW_LINE print NEW_LINE ENDMAIN
		{
			printf("\nRight struct struct print  program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE struct NEW_LINE switch NEW_LINE  ENDMAIN
		{
			printf("\nRight function struct switch  program");
		}
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE function NEW_LINE function NEW_LINE switch NEW_LINE ENDMAIN
		{
			printf("\nRight function function switch  program");
		}	
	| PROGRAM STRING NEW_LINE STARTMAIN NEW_LINE struct NEW_LINE struct NEW_LINE switch NEW_LINE ENDMAIN
		{
			printf("\nRight struct struct switch  program");
		}					

;	

		

	



function:


	 FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE 
		{
			printf("\nI love you\n");
		} 
	
	| FUNCTION STRING f_parameters  NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE RETURN_VAR NEW_LINE  END_FUNCTION NEW_LINE
		
		{
			printf("RIGHT INPUT");
		}
		
	| FUNCTION STRING f_parameters NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE
		{	
			printf("\nGTPK input");		
		}
	
	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE 
	
	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE
	
	| FUNCTION STRING f_parameters NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE
	
	| FUNCTION STRING f_parameters NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE
	
	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE
	
	| FUNCTION STRING f_parameters NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE
	
	| FUNCTION STRING f_parameters NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE
	
	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE
	
	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT TAB switch NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

        | FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE 	ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE 

	| FUNCTION STRING f_parameters NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE
	
	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_int  NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE
	
	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE
	
	| FUNCTION STRING f_parameters NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE
	
	| FUNCTION STRING f_parameters NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE	TAB for NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE
	
	| FUNCTION STRING f_parameters NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB  while NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB while NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB switch NEW_LINE RETURN_VAR NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB if NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	| FUNCTION STRING f_parameters NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB print NEW_LINE RETURN_VAR NEW_LINE END_FUNCTION NEW_LINE

	 
	|OTHER      
                {
			printf("\nGTPK input");
		}
;

f_parameters:
 	  L_PAR VARS_CHAR STRING VARS_INTEGER STRING R_PAR
	| L_PAR VARS_CHAR STRING R_PAR
	| L_PAR VARS_INTEGER STRING R_PAR
	| L_PAR R_PAR	

;

return:

	RETURN STRING  NEW_LINE 
;



for:
	  FOR_COMMAND NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE END_FOR
	
	| FOR_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB  ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB END_FOR
	
	| FOR_COMMAND NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE END_FOR 
	
	| FOR_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB END_FOR 
	
	| FOR_COMMAND NEW_LINE ASSIGNMENT NEW_LINE END_FOR
	
	| FOR_COMMAND NEW_LINE TAB  ASSIGNMENT NEW_LINE TAB END_FOR
	
	| FOR_COMMAND NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB FOR_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB  END_FOR NEW_LINE END_FOR   
	
	| FOR_COMMAND NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB FOR_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_FOR NEW_LINE END_FOR

	| FOR_COMMAND NEW_LINE ASSIGNMENT NEW_LINE  ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB FOR_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_FOR NEW_LINE END_FOR
	
	| FOR_COMMAND NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB FOR_COMMAND NEW_LINE TAB END_FOR NEW_LINE END_FOR
	
	| FOR_COMMAND NEW_LINE ASSIGNMENT NEW_LINE  ASSIGNMENT NEW_LINE TAB FOR_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_FOR NEW_LINE END_FOR 
	
	| FOR_COMMAND NEW_LINE ASSIGNMENT NEW_LINE  ASSIGNMENT NEW_LINE TAB FOR_COMMAND NEW_LINE TAB TAB  ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_FOR NEW_LINE END_FOR 
	
	| FOR_COMMAND NEW_LINE ASSIGNMENT NEW_LINE  ASSIGNMENT NEW_LINE TAB FOR_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_FOR NEW_LINE END_FOR
	
	|FOR_COMMAND NEW_LINE ASSIGNMENT NEW_LINE  ASSIGNMENT NEW_LINE TAB FOR_COMMAND NEW_LINE TAB END_FOR NEW_LINE END_FOR

	| FOR_COMMAND NEW_LINE ASSIGNMENT NEW_LINE TAB FOR_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_FOR NEW_LINE END_FOR
	
	| FOR_COMMAND NEW_LINE ASSIGNMENT NEW_LINE TAB FOR_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_FOR NEW_LINE END_FOR 

	| FOR_COMMAND NEW_LINE ASSIGNMENT NEW_LINE TAB FOR_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_FOR NEW_LINE END_FOR
	
	| FOR_COMMAND NEW_LINE ASSIGNMENT NEW_LINE TAB FOR_COMMAND NEW_LINE TAB END_FOR NEW_LINE END_FOR

	| FOR_COMMAND NEW_LINE TAB FOR_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_FOR NEW_LINE END_FOR  

	| FOR_COMMAND NEW_LINE TAB FOR_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_FOR NEW_LINE END_FOR

	| FOR_COMMAND NEW_LINE TAB FOR_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_FOR NEW_LINE END_FOR

	| FOR_COMMAND NEW_LINE TAB FOR_COMMAND NEW_LINE TAB END_FOR NEW_LINE END_FOR	
	
	| FOR_COMMAND NEW_LINE TAB NEW_LINE for NEW_LINE NEW_LINE TAB END_FOR

	| FOR_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB NEW_LINE TAB for NEW_LINE NEW_LINE  TAB END_FOR

	| FOR_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB NEW_LINE TAB  for NEW_LINE NEW_LINE TAB END_FOR

	| FOR_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB NEW_LINE TAB  for NEW_LINE NEW_LINE TAB END_FOR

	| FOR_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE NEW_LINE TAB while NEW_LINE NEW_LINE TAB END_FOR

	| FOR_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE NEW_LINE TAB while NEW_LINE NEW_LINE TAB END_FOR

	| FOR_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE NEW_LINE TAB while NEW_LINE NEW_LINE TAB END_FOR 

	| FOR_COMMAND NEW_LINE TAB print NEW_LINE END_FOR

	| FOR_COMMAND NEW_LINE TAB ASSIGNMENT print NEW_LINE END_FOR
	
	| FOR_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT print NEW_LINE END_FOR
	
	| FOR_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT print NEW_LINE END_FOR
	
	| FOR_COMMAND NEW_LINE TAB  for NEW_LINE print NEW_LINE  END_FOR
	
	| FOR_COMMAND NEW_LINE TAB while NEW_LINE print NEW_LINE END_FOR
	
	| FOR_COMMAND NEW_LINE TAB for NEW_LINE END_FOR

	| FOR_COMMAND NEW_LINE TAB while NEW_LINE END_FOR
	
	| FOR_COMMAND NEW_LINE TAB TAB print NEW_LINE TAB END_FOR

	| FOR_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB print NEW_LINE  TAB END_FOR
	
	| FOR_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB print NEW_LINE  TAB END_FOR

	| FOR_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB print NEW_LINE TAB END_FOR 
	
	
;	


while:
	

         WHILE_COMMAND NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE END_WHILE
	{
		printf("WHILE IS MY WIFE\n");
	}
	
	| WHILE_COMMAND NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT  NEW_LINE  END_WHILE
	
	{
		printf("\nFOR THE SAKE OF HUMANITY WORK PLS");
	}

	|WHILE_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB  END_WHILE

	|WHILE_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB END_WHILE
	
	|WHILE_COMMAND NEW_LINE ASSIGNMENT NEW_LINE  END_WHILE

	|WHILE_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB END_WHILE

	|WHILE_COMMAND NEW_LINE TAB for NEW_LINE END_WHILE
	
	|WHILE_COMMAND NEW_LINE TAB for NEW_LINE TAB END_WHILE

	|WHILE_COMMAND NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE  TAB for NEW_LINE END_WHILE
	
	|WHILE_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB for NEW_LINE TAB END_WHILE
	
	|WHILE_COMMAND NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE  TAB for NEW_LINE END_WHILE
	
	|WHILE_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB for NEW_LINE TAB END_WHILE 

	|WHILE_COMMAND NEW_LINE TAB  while NEW_LINE END_WHILE

	|WHILE_COMMAND NEW_LINE TAB switch NEW_LINE END_WHILE
	 
	|WHILE_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE NEW_LINE TAB for NEW_LINE NEW_LINE TAB  END_WHILE
	
	|WHILE_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE NEW_LINE TAB for NEW_LINE NEW_LINE TAB  END_WHILE 
	
	|WHILE_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE NEW_LINE TAB for NEW_LINE NEW_LINE TAB END_WHILE
	
	|WHILE_COMMAND NEW_LINE TAB while NEW_LINE NEW_LINE TAB  END_WHILE

	|WHILE_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE NEW_LINE TAB while NEW_LINE NEW_LINE TAB  END_WHILE
	
	|WHILE_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE NEW_LINE TAB while NEW_LINE NEW_LINE TAB  END_WHILE
	
	|WHILE_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE NEW_LINE TAB while NEW_LINE NEW_LINE TAB END_WHILE 

	|WHILE_COMMAND NEW_LINE TAB print NEW_LINE END_WHILE

	|WHILE_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB print NEW_LINE END_WHILE
	
	|WHILE_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB print NEW_LINE END_WHILE

	|WHILE_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB print NEW_LINE END_WHILE

	|WHILE_COMMAND NEW_LINE TAB for NEW_LINE print NEW_LINE END_WHILE
	
	|WHILE_COMMAND NEW_LINE TAB while NEW_LINE print NEW_LINE END_WHILE

	|WHILE_COMMAND NEW_LINE TAB TAB print NEW_LINE TAB TAB END_WHILE
	
	|WHILE_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB print NEW_LINE TAB TAB END_WHILE

	|WHILE_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB print NEW_LINE TAB TAB END_WHILE

	|WHILE_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB print NEW_LINE TAB TAB END_WHILE 

	|WHILE_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB END_WHILE
	
	|WHILE_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB END_WHILE
	
	|WHILE_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB END_WHILE 
	
	|WHILE_COMMAND NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE END_WHILE

	|WHILE_COMMAND NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE END_WHILE

	|WHILE_COMMAND NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE ASSIGNMENT NEW_LINE TAB for NEW_LINE END_WHILE

	
;	

switch:
       
      SWITCH_COMMAND NEW_LINE  case NEW_LINE ENDSWITCH NEW_LINE
	{
	   printf("\nSwitch-Case-Default i love you guys");
	} 

      |SWITCH_COMMAND NEW_LINE case NEW_LINE  
	{
	   printf("\nSwitch works fine!!");
	}	
	

;

case:
	
	CASE_COMMAND NEW_LINE TAB ASSIGNMENT 
	
	|CASE_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT
	
        |CASE_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT 

	|CASE_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE
	
	|CASE_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE

	|CASE_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE 
	
	|CASE_COMMAND NEW_LINE TAB for NEW_LINE case 
	
	|CASE_COMMAND NEW_LINE TAB while NEW_LINE case 
		
	|CASE_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB for NEW_LINE case 

        |CASE_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB while NEW_LINE case 

	|CASE_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB  for NEW_LINE case
	
	|CASE_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB  while NEW_LINE case

	|CASE_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB  for NEW_LINE case

	|CASE_COMMAND NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB  while NEW_LINE case
 
	|CASE_COMMAND NEW_LINE  case NEW_LINE case NEW_LINE default

	|CASE_COMMAND NEW_LINE  case NEW_LINE  default

	|CASE_COMMAND NEW_LINE  case  NEW_LINE case

	|CASE_COMMAND NEW_LINE  case 

	|ENDSWITCH

	|default
;

default:

	DEFAULT NEW_LINE TAB for NEW_LINE
	
	|DEFAULT NEW_LINE TAB while NEW_LINE

	|DEFAULT NEW_LINE TAB ASSIGNMENT NEW_LINE   

	|DEFAULT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB  for NEW_LINE  

	|DEFAULT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB while NEW_LINE

	|DEFAULT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE 
	
	|DEFAULT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB  for NEW_LINE

	|DEFAULT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB while NEW_LINE

	|DEFAULT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE
	
	|DEFAULT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB for NEW_LINE

	|DEFAULT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB ASSIGNMENT NEW_LINE TAB while NEW_LINE
	
;


if:
      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE  TAB ELSE_IF NEW_LINE TAB TAB  ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB  ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB  ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE  TAB END_IF
      
      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE NEW_LINE TAB END_IF    

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE_IF NEW_LINE TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF TAB TAB for NEW_LINE NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF TAB TAB while NEW_LINE NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF TAB TAB switch NEW_LINE NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB for NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB while NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB switch NEW_LINE TAB END_IF 

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE NEW_LINE TAB TAB for NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE NEW_LINE TAB TAB switch NEW_LINE TAB END_IF 

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE NEW_LINE TAB TAB while NEW_LINE TAB END_IF 

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB for NEW_LINE  TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF 

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB while NEW_LINE TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB switch NEW_LINE TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE NEW_LINE TAB TAB while NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE NEW_LINE TAB TAB switch NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE NEW_LINE TAB TAB for NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE_IF NEW_LINE TAB TAB for NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE_IF NEW_LINE TAB TAB for TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB for TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB for NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB for NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB for TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB for NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB for TAB ELSE_IF NEW_LINE TAB TAB for TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB for NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB for TAB ELSE_IF NEW_LINE TAB TAB for TAB ELSE_IF NEW_LINE TAB TAB for NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB while NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB while NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB while TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF
      | IF_COMMAND NEW_LINE TAB TAB while NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB while TAB ELSE_IF NEW_LINE TAB TAB while TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB while NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB while TAB ELSE_IF NEW_LINE TAB TAB while TAB ELSE_IF NEW_LINE TAB TAB while NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB switch NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB switch NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB switch TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB switch NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB switch TAB ELSE_IF NEW_LINE TAB TAB switch TAB ELSE_IF NEW_LINE TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB switch NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB switch TAB ELSE_IF NEW_LINE TAB TAB switch TAB ELSE_IF NEW_LINE TAB TAB switch NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB for NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB while TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB while NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB for TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB while NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB for TAB ELSE_IF NEW_LINE TAB TAB for TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB for NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB while TAB ELSE_IF NEW_LINE TAB TAB while TAB ELSE_IF NEW_LINE TAB TAB switch NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB for NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB for NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB for TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB for NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB for TAB ELSE_IF NEW_LINE TAB TAB for NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB for TAB ELSE_IF NEW_LINE TAB TAB for NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB while NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB while NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB while TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB while NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB while TAB ELSE_IF NEW_LINE TAB TAB while NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB while TAB ELSE_IF NEW_LINE TAB TAB while NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB switch NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB switch NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB switch TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB switch NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB switch TAB ELSE_IF NEW_LINE TAB TAB switch NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB switch TAB ELSE_IF NEW_LINE TAB TAB switch NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB for NEW_LINE TAB ELSE_IF  NEW_LINE TAB TAB ASSIGNMENT TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB for NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB for TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB for NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB for TAB ELSE NEW_LINE TAB TAB for NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB for TAB ELSE NEW_LINE TAB TAB for NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB while NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB while NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB while TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB while NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB while TAB ELSE NEW_LINE TAB TAB while NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB while TAB ELSE NEW_LINE TAB TAB while NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB switch NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB switch NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB switch TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB switch NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB switch TAB ELSE NEW_LINE TAB TAB switch NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB switch TAB ELSE NEW_LINE TAB TAB switch NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB print NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB print NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB print TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB print NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB print TAB ELSE NEW_LINE TAB TAB print NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB print TAB ELSE NEW_LINE TAB TAB print NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB print NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB print NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB print TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB print NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB print TAB ELSE_IF NEW_LINE TAB TAB print TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB print NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB print TAB ELSE_IF NEW_LINE TAB TAB print TAB ELSE_IF NEW_LINE TAB TAB print NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB print NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB print NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB print TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB print NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB print TAB ELSE_IF NEW_LINE TAB TAB print TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB print NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB print TAB ELSE_IF NEW_LINE TAB TAB print TAB ELSE NEW_LINE TAB TAB print NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF TAB TAB print NEW_LINE NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB print NEW_LINE TAB ELSE_IF TAB TAB ASSIGNMENT NEW_LINE NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE TAB TAB print NEW_LINE NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB print NEW_LINE TAB ELSE TAB TAB ASSIGNMENT NEW_LINE NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE  TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF      

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB  ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT  NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT  NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT  NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF      

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE_IF NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB for NEW_LINE TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB for NEW_LINE TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE NEW_LINE TAB TAB for NEW_LINE NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB while NEW_LINE TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB while NEW_LINE TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE NEW_LINE TAB TAB while NEW_LINE NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB switch NEW_LINE TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB switch NEW_LINE TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE NEW_LINE TAB TAB switch NEW_LINE NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB print NEW_LINE TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB print NEW_LINE TAB ELSE NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB END_IF

      | IF_COMMAND NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB TAB ASSIGNMENT NEW_LINE TAB ELSE NEW_LINE TAB TAB print NEW_LINE NEW_LINE TAB END_IF

	

print:

	PRINT_COMMAND  
	

;


declarations_char:

	 VARS_CHAR STRING
	{
	    count_varschar++;

	    if(count_varschar==1)
	    {
	      c_vars = (char*)malloc(count_varschar*sizeof(char));
	      strcpy(c_vars,$2);
	    }

	   else
	   {
	     c_vars = (char*)realloc(c_vars,count_varschar*sizeof(char));
	     strcat(c_vars,$2);
		
	   }
	
	}  

;


declarations_int:

	VARS_INTEGER STRING
	{
	  count_varsint++;

            if(count_varsint==1)
            {
              i_vars = (char*)malloc(count_varsint*sizeof(char));
              strcpy(i_vars,$2);
            }

           else
           {
             i_vars = (char*)realloc(i_vars,count_varsint*sizeof(char));
             strcat(i_vars,$2);

           }

        } 


	 
;

assignments:
		
	STRING EQUAL STRING NEW_LINE
	{
		
	}

	|STRING EQUAL STRING PLUS STRING

	|STRING EQUAL STRING MINUS STRING

	|STRING EQUAL STRING MUL STRING

	|STRING EQUAL STRING DIV STRING

	|STRING EQUAL STRING POWER STRING
	
;
	

struct:
	STRUCT  NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE ENDSTRUCT
	
	|TYPE_STRUCT STRING NEW_LINE declarations_char NEW_LINE declarations_int NEW_LINE END_T_STRUCT NEW_LINE

;



%%

int yyerror(char *s)
{
	printf("Syntax Error on line %d\n", linenum);
	return 0;
}

void  check_var_names(char* str1,char* str2)
{
    char c_vars1[100];
    char i_vars1[100];
    int k=0;
    int i=0;
    int flag=0;
    int len1 = strlen(str1);
    int len2 = strlen(str2); 
    char* coma1 = NULL;
    char* coma2 = NULL;    
		
   printf("%s\t%s",str1,str2);
   printf("%d\t%d",len1,len2);

      coma1 = strchr(str1, ',');
      coma2 = strchr(str2, ',');

	printf("/n%c",*coma2);

	if( (coma1==NULL) && (coma2==NULL) )
		{
			printf("\nThere i am");
			flag = strcmp(str1,str2);
			if(flag==0)
				{
				    printf("\nSame name different type");	
				    exit(0);
				}
			else
			   {
				return;
			   }
		}

	else if( (coma1==NULL) && (*coma2==',') )
	{
		printf("\nIAM IN");
	
	  while(1)
           {

             if(str2[k]!=',')
                {
                   i_vars1[k] = str2[k];
                   k++;
                }


             if( (str2[k]==',') || (str2[k]==';') )
                {
                    flag = strcmp(str1,i_vars1);
                    if(flag==0)
                        {
                            printf("\nDifferent types same name");
                            exit(-1);
                        }
                }

	    if(str2[k]==(len2-1))
		break;
          }
			
	}

	else if( (coma1!=NULL) && (coma2==NULL) )
	{
		printf("\nNo i am here");
	
	    while(1)
            {
              if(str1[i]!=',' && i<len1)
                {
                        c_vars1[i] = str1[i];
                        i++;
                }

             if(str1[i]==',')
                {
                    flag = strcmp(c_vars1,str2);
                    if(flag==0)
                        {
                            printf("\nDifferent types same name");
                            exit(-1);
                        }
                }

	    if(i==len1-1)
		break;

	    }		
	}

	else
	{
		
         while(1)
	 {     
		printf("\nDude");
		
	     if(str1[i]!=',' && i<len1)
		{
			c_vars1[i] = str1[i];
			i++;
		}	

	     if(str2[k]!=',' && k<len2)
                {
                   i_vars[k] = str2[k];
                   k++;
                }


	     if(str1[i]==',' && str2[k]==',')
		{		
	            flag = strcmp(c_vars1,i_vars1);
	            if(flag==0)
			{
		            printf("\nDifferent types same name");
			    exit(-1);
			}
		}

	    

            if( (i==len1-1) && (k==len2-1) )
	          break;
	     
	 } 

	} 
}	



	

int main()
{

system("clear");
yyparse();

return 0;

}
